{
  "version": 3,
  "sources": ["../../atomic-spinner/lib/index.esm.js"],
  "sourcesContent": ["import * as React from 'react';\nimport React__default from 'react';\n\nvar ElectronPath = function (_a) {\n    var pathDefinitionId = _a.pathDefinitionId, color = _a.color, width = _a.width, rotationAngle = _a.rotationAngle;\n    return (React.createElement(\"g\", { transform: \"rotate(\".concat(rotationAngle, \" 50 50)\") },\n        React.createElement(\"use\", { href: \"#\".concat(pathDefinitionId), stroke: color, strokeWidth: width })));\n};\n\nvar Electron = function (_a) {\n    var pathDefinitionId = _a.pathDefinitionId, rotationAngle = _a.rotationAngle, orbitTime = _a.orbitTime, spacetimeOffset = _a.spacetimeOffset, size = _a.size, color = _a.color;\n    return (React.createElement(\"g\", { \"data-testid\": \"electron\", transform: \"rotate(\".concat(rotationAngle, \" 50 50)\") },\n        React.createElement(\"circle\", { cx: \"50\", cy: \"15\", r: size, fill: color },\n            React.createElement(\"animateMotion\", { dur: \"\".concat(orbitTime, \"s\"), repeatCount: \"indefinite\", begin: \"\".concat(spacetimeOffset, \"s\") },\n                React.createElement(\"mpath\", { href: \"#\".concat(pathDefinitionId) })))));\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar NucleusLayer = function (_a) {\n    var particleFillColor = _a.particleFillColor, particleBorderColor = _a.particleBorderColor, particleBorderWidth = _a.particleBorderWidth, particlesPerLayer = _a.particlesPerLayer, particleSize = _a.particleSize, distanceFromCenter = _a.distanceFromCenter, orbitTime = _a.orbitTime, startingAngle = _a.startingAngle, nucleusMaskOverlap = _a.nucleusMaskOverlap;\n    var particles = Array.from({ length: particlesPerLayer })\n        .map(function (_, i) {\n        var rotationAngle = startingAngle + i * ((2 * Math.PI) / particlesPerLayer);\n        var offsetX = particlesPerLayer > 1 ? distanceFromCenter * Math.cos(rotationAngle) : 0;\n        var offsetY = particlesPerLayer > 1 ? distanceFromCenter * Math.sin(rotationAngle) : 0;\n        var particleDimensions = {\n            cx: 50 + offsetX,\n            cy: 50 + offsetY\n        };\n        var effectiveBorderWidth = Math.min(particleBorderWidth, particleSize / 3);\n        return (React.createElement(React.Fragment, { key: \"particle-\".concat(rotationAngle) },\n            nucleusMaskOverlap && effectiveBorderWidth > 0 && i === 0 && (React.createElement(\"mask\", { id: \"layer-\".concat(startingAngle, \"-bottom-particle\") },\n                React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"100\", height: \"100\", fill: \"white\" }),\n                React.createElement(\"circle\", __assign({}, particleDimensions, { r: particleSize + effectiveBorderWidth / 2 })))),\n            React.createElement(\"circle\", __assign({}, particleDimensions, { r: particleSize, fill: particleFillColor, stroke: particleBorderColor, strokeWidth: effectiveBorderWidth, mask: nucleusMaskOverlap && i > Math.floor(particlesPerLayer / 2) ? \"url('#layer-\".concat(startingAngle, \"-bottom-particle')\") : undefined }))));\n    });\n    return (React.createElement(\"g\", null,\n        React.createElement(\"animateTransform\", { attributeName: \"transform\", begin: \"0s\", dur: \"\".concat(orbitTime, \"s\"), type: \"rotate\", from: \"0 50 50\", to: \"360 50 50\", repeatCount: \"indefinite\" }),\n        particles));\n};\nvar Nucleus = function (props) {\n    var angleIncrement = props.particlesPerLayer % 2 === 0\n        ? Math.PI / 2 / Math.max(1, (props.layerCount - 1))\n        : Math.PI / Math.max(1, (props.layerCount - 1));\n    return (React.createElement(React.Fragment, null, Array.from({ length: props.layerCount }).map(function (_, index) {\n        var startingAngle = index * angleIncrement;\n        return React.createElement(NucleusLayer, __assign({ key: \"nucleus-layer-\".concat(startingAngle) }, props, { particlesPerLayer: props.particlesPerLayer, startingAngle: startingAngle }));\n    })));\n};\n\nvar AtomicSpinner = function (_a) {\n    var _b = _a.atomSize, atomSize = _b === void 0 ? 200 : _b, _c = _a.displayElectronPaths, displayElectronPaths = _c === void 0 ? true : _c, _d = _a.displayNucleus, displayNucleus = _d === void 0 ? true : _d, _e = _a.electronColorPalette, electronColorPalette = _e === void 0 ? ['#0081C9', '#5BC0F8', '#86E5FF'] : _e, _f = _a.electronPathCount, electronPathCount = _f === void 0 ? 3 : _f, _g = _a.electronPathColor, electronPathColor = _g === void 0 ? '#707070' : _g, _h = _a.electronPathWidth, electronPathWidth = _h === void 0 ? 0.5 : _h, _j = _a.electronsPerPath, electronsPerPath = _j === void 0 ? 2 : _j, _k = _a.electronSize, electronSize = _k === void 0 ? 1.5 : _k, _l = _a.electronSpeed, electronSpeed = _l === void 0 ? 0.5 : _l, _m = _a.nucleusLayerCount, nucleusLayerCount = _m === void 0 ? 2 : _m, _o = _a.nucleusParticlesPerLayer, nucleusParticlesPerLayer = _o === void 0 ? 3 : _o, _p = _a.nucleusParticleFillColor, nucleusParticleFillColor = _p === void 0 ? '#707070' : _p, _q = _a.nucleusParticleBorderColor, nucleusParticleBorderColor = _q === void 0 ? '#999999' : _q, _r = _a.nucleusParticleBorderWidth, nucleusParticleBorderWidth = _r === void 0 ? 0.3 : _r, _s = _a.nucleusParticleSize, nucleusParticleSize = _s === void 0 ? 2.5 : _s, _t = _a.nucleusDistanceFromCenter, nucleusDistanceFromCenter = _t === void 0 ? 2.5 : _t, _u = _a.nucleusSpeed, nucleusSpeed = _u === void 0 ? 2 : _u, _v = _a.nucleusMaskOverlap, nucleusMaskOverlap = _v === void 0 ? true : _v;\n    var electronPaths = Array.from({ length: electronPathCount })\n        .map(function (_, i) { return ({\n        rotationAngle: 0 + i * (180 / electronPathCount),\n        electronCount: electronsPerPath,\n        electronOrbitTime: 1 / electronSpeed + Math.random() * (0.2 / electronSpeed)\n    }); });\n    var electronPathDefinitionId = 'electronPath';\n    var electronDefinitionId = 'electron';\n    var colorOffset = Math.floor(Math.random() * electronColorPalette.length);\n    return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", width: atomSize, height: atomSize, viewBox: \"0 0 100 100\", preserveAspectRatio: \"xMidYMid\" },\n        React.createElement(\"defs\", null,\n            React.createElement(\"path\", { id: electronPathDefinitionId, d: \"M50 15A15 35 0 0 1 50 85A15 35 0 0 1 50 15\", fill: \"none\" }),\n            React.createElement(\"path\", { id: electronDefinitionId, d: \"M0 0A15 35 0 0 1 0 70A15 35 0 0 1 0 0\", fill: \"none\" })),\n        displayNucleus &&\n            (React.createElement(Nucleus, { layerCount: nucleusLayerCount, particlesPerLayer: nucleusParticlesPerLayer, particleSize: nucleusParticleSize, distanceFromCenter: nucleusDistanceFromCenter, particleFillColor: nucleusParticleFillColor, particleBorderColor: nucleusParticleBorderColor, particleBorderWidth: nucleusParticleBorderWidth, orbitTime: 10 / nucleusSpeed, nucleusMaskOverlap: nucleusMaskOverlap })),\n        displayElectronPaths &&\n            electronPaths.map(function (_a) {\n                var rotationAngle = _a.rotationAngle;\n                return (React.createElement(ElectronPath, { key: \"electron-path-\".concat(rotationAngle), pathDefinitionId: electronPathDefinitionId, color: electronPathColor, width: electronPathWidth, rotationAngle: rotationAngle }));\n            }),\n        electronPaths.map(function (_a, pathIndex) {\n            var electronCount = _a.electronCount, rotationAngle = _a.rotationAngle, electronOrbitTime = _a.electronOrbitTime;\n            var randomSpacetimeShift = (-1 + Math.random() * -1) * electronOrbitTime;\n            return Array.from({ length: electronCount })\n                .map(function (_, electronIndex) {\n                var _a;\n                var electronKey = electronIndex;\n                return (React.createElement(Electron, { key: \"electron-\".concat(electronKey), pathDefinitionId: electronDefinitionId, rotationAngle: rotationAngle, orbitTime: electronOrbitTime, size: electronSize, spacetimeOffset: randomSpacetimeShift + electronIndex * (electronOrbitTime / (electronCount)), color: (_a = electronColorPalette[(pathIndex * electronsPerPath + electronIndex + colorOffset) % electronColorPalette.length]) !== null && _a !== void 0 ? _a : '#000' }));\n            });\n        })));\n};\n\nvar index = React__default.memo(AtomicSpinner);\n\nexport { index as default };\n//# sourceMappingURL=index.esm.js.map\n"],
  "mappings": ";;;;;;;;AAAA,YAAuB;AACvB,mBAA2B;AAE3B,IAAI,eAAe,SAAU,IAAI;AAC7B,MAAI,mBAAmB,GAAG,kBAAkB,QAAQ,GAAG,OAAO,QAAQ,GAAG,OAAO,gBAAgB,GAAG;AACnG,SAAc;AAAA,IAAc;AAAA,IAAK,EAAE,WAAW,UAAU,OAAO,eAAe,SAAS,EAAE;AAAA,IAC/E,oBAAc,OAAO,EAAE,MAAM,IAAI,OAAO,gBAAgB,GAAG,QAAQ,OAAO,aAAa,MAAM,CAAC;AAAA,EAAC;AAC7G;AAEA,IAAI,WAAW,SAAU,IAAI;AACzB,MAAI,mBAAmB,GAAG,kBAAkB,gBAAgB,GAAG,eAAe,YAAY,GAAG,WAAW,kBAAkB,GAAG,iBAAiB,OAAO,GAAG,MAAM,QAAQ,GAAG;AACzK,SAAc;AAAA,IAAc;AAAA,IAAK,EAAE,eAAe,YAAY,WAAW,UAAU,OAAO,eAAe,SAAS,EAAE;AAAA,IAC1G;AAAA,MAAc;AAAA,MAAU,EAAE,IAAI,MAAM,IAAI,MAAM,GAAG,MAAM,MAAM,MAAM;AAAA,MAC/D;AAAA,QAAc;AAAA,QAAiB,EAAE,KAAK,GAAG,OAAO,WAAW,GAAG,GAAG,aAAa,cAAc,OAAO,GAAG,OAAO,iBAAiB,GAAG,EAAE;AAAA,QAC/H,oBAAc,SAAS,EAAE,MAAM,IAAI,OAAO,gBAAgB,EAAE,CAAC;AAAA,MAAC;AAAA,IAAC;AAAA,EAAC;AACtF;AAmBA,IAAI,WAAW,WAAW;AACtB,aAAW,OAAO,UAAU,SAASA,UAAS,GAAG;AAC7C,aAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,UAAI,UAAU,CAAC;AACf,eAAS,KAAK;AAAG,YAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC;AAAG,YAAE,CAAC,IAAI,EAAE,CAAC;AAAA,IAC/E;AACA,WAAO;AAAA,EACX;AACA,SAAO,SAAS,MAAM,MAAM,SAAS;AACzC;AAOA,IAAI,eAAe,SAAU,IAAI;AAC7B,MAAI,oBAAoB,GAAG,mBAAmB,sBAAsB,GAAG,qBAAqB,sBAAsB,GAAG,qBAAqB,oBAAoB,GAAG,mBAAmB,eAAe,GAAG,cAAc,qBAAqB,GAAG,oBAAoB,YAAY,GAAG,WAAW,gBAAgB,GAAG,eAAe,qBAAqB,GAAG;AACpV,MAAI,YAAY,MAAM,KAAK,EAAE,QAAQ,kBAAkB,CAAC,EACnD,IAAI,SAAU,GAAG,GAAG;AACrB,QAAI,gBAAgB,gBAAgB,KAAM,IAAI,KAAK,KAAM;AACzD,QAAI,UAAU,oBAAoB,IAAI,qBAAqB,KAAK,IAAI,aAAa,IAAI;AACrF,QAAI,UAAU,oBAAoB,IAAI,qBAAqB,KAAK,IAAI,aAAa,IAAI;AACrF,QAAI,qBAAqB;AAAA,MACrB,IAAI,KAAK;AAAA,MACT,IAAI,KAAK;AAAA,IACb;AACA,QAAI,uBAAuB,KAAK,IAAI,qBAAqB,eAAe,CAAC;AACzE,WAAc;AAAA,MAAoB;AAAA,MAAU,EAAE,KAAK,YAAY,OAAO,aAAa,EAAE;AAAA,MACjF,sBAAsB,uBAAuB,KAAK,MAAM,KAAY;AAAA,QAAc;AAAA,QAAQ,EAAE,IAAI,SAAS,OAAO,eAAe,kBAAkB,EAAE;AAAA,QACzI,oBAAc,QAAQ,EAAE,GAAG,KAAK,GAAG,KAAK,OAAO,OAAO,QAAQ,OAAO,MAAM,QAAQ,CAAC;AAAA,QACpF,oBAAc,UAAU,SAAS,CAAC,GAAG,oBAAoB,EAAE,GAAG,eAAe,uBAAuB,EAAE,CAAC,CAAC;AAAA,MAAC;AAAA,MAC7G,oBAAc,UAAU,SAAS,CAAC,GAAG,oBAAoB,EAAE,GAAG,cAAc,MAAM,mBAAmB,QAAQ,qBAAqB,aAAa,sBAAsB,MAAM,sBAAsB,IAAI,KAAK,MAAM,oBAAoB,CAAC,IAAI,eAAe,OAAO,eAAe,oBAAoB,IAAI,OAAU,CAAC,CAAC;AAAA,IAAC;AAAA,EACjU,CAAC;AACD,SAAc;AAAA,IAAc;AAAA,IAAK;AAAA,IACvB,oBAAc,oBAAoB,EAAE,eAAe,aAAa,OAAO,MAAM,KAAK,GAAG,OAAO,WAAW,GAAG,GAAG,MAAM,UAAU,MAAM,WAAW,IAAI,aAAa,aAAa,aAAa,CAAC;AAAA,IAChM;AAAA,EAAS;AACjB;AACA,IAAI,UAAU,SAAU,OAAO;AAC3B,MAAI,iBAAiB,MAAM,oBAAoB,MAAM,IAC/C,KAAK,KAAK,IAAI,KAAK,IAAI,GAAI,MAAM,aAAa,CAAE,IAChD,KAAK,KAAK,KAAK,IAAI,GAAI,MAAM,aAAa,CAAE;AAClD,SAAc,oBAAoB,gBAAU,MAAM,MAAM,KAAK,EAAE,QAAQ,MAAM,WAAW,CAAC,EAAE,IAAI,SAAU,GAAGC,QAAO;AAC/G,QAAI,gBAAgBA,SAAQ;AAC5B,WAAa,oBAAc,cAAc,SAAS,EAAE,KAAK,iBAAiB,OAAO,aAAa,EAAE,GAAG,OAAO,EAAE,mBAAmB,MAAM,mBAAmB,cAA6B,CAAC,CAAC;AAAA,EAC3L,CAAC,CAAC;AACN;AAEA,IAAI,gBAAgB,SAAU,IAAI;AAC9B,MAAI,KAAK,GAAG,UAAU,WAAW,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,sBAAsB,uBAAuB,OAAO,SAAS,OAAO,IAAI,KAAK,GAAG,gBAAgB,iBAAiB,OAAO,SAAS,OAAO,IAAI,KAAK,GAAG,sBAAsB,uBAAuB,OAAO,SAAS,CAAC,WAAW,WAAW,SAAS,IAAI,IAAI,KAAK,GAAG,mBAAmB,oBAAoB,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,mBAAmB,oBAAoB,OAAO,SAAS,YAAY,IAAI,KAAK,GAAG,mBAAmB,oBAAoB,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,kBAAkB,mBAAmB,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,cAAc,eAAe,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,eAAe,gBAAgB,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,mBAAmB,oBAAoB,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,0BAA0B,2BAA2B,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,0BAA0B,2BAA2B,OAAO,SAAS,YAAY,IAAI,KAAK,GAAG,4BAA4B,6BAA6B,OAAO,SAAS,YAAY,IAAI,KAAK,GAAG,4BAA4B,6BAA6B,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,qBAAqB,sBAAsB,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,2BAA2B,4BAA4B,OAAO,SAAS,MAAM,IAAI,KAAK,GAAG,cAAc,eAAe,OAAO,SAAS,IAAI,IAAI,KAAK,GAAG,oBAAoB,qBAAqB,OAAO,SAAS,OAAO;AACh8C,MAAI,gBAAgB,MAAM,KAAK,EAAE,QAAQ,kBAAkB,CAAC,EACvD,IAAI,SAAU,GAAG,GAAG;AAAE,WAAQ;AAAA,MAC/B,eAAe,IAAI,KAAK,MAAM;AAAA,MAC9B,eAAe;AAAA,MACf,mBAAmB,IAAI,gBAAgB,KAAK,OAAO,KAAK,MAAM;AAAA,IAClE;AAAA,EAAI,CAAC;AACL,MAAI,2BAA2B;AAC/B,MAAI,uBAAuB;AAC3B,MAAI,cAAc,KAAK,MAAM,KAAK,OAAO,IAAI,qBAAqB,MAAM;AACxE,SAAc;AAAA,IAAc;AAAA,IAAO,EAAE,OAAO,8BAA8B,YAAY,gCAAgC,OAAO,UAAU,QAAQ,UAAU,SAAS,eAAe,qBAAqB,WAAW;AAAA,IACvM;AAAA,MAAc;AAAA,MAAQ;AAAA,MAClB,oBAAc,QAAQ,EAAE,IAAI,0BAA0B,GAAG,8CAA8C,MAAM,OAAO,CAAC;AAAA,MACrH,oBAAc,QAAQ,EAAE,IAAI,sBAAsB,GAAG,yCAAyC,MAAM,OAAO,CAAC;AAAA,IAAC;AAAA,IACvH,kBACW,oBAAc,SAAS,EAAE,YAAY,mBAAmB,mBAAmB,0BAA0B,cAAc,qBAAqB,oBAAoB,2BAA2B,mBAAmB,0BAA0B,qBAAqB,4BAA4B,qBAAqB,4BAA4B,WAAW,KAAK,cAAc,mBAAuC,CAAC;AAAA,IACvZ,wBACI,cAAc,IAAI,SAAUC,KAAI;AAC5B,UAAI,gBAAgBA,IAAG;AACvB,aAAc,oBAAc,cAAc,EAAE,KAAK,iBAAiB,OAAO,aAAa,GAAG,kBAAkB,0BAA0B,OAAO,mBAAmB,OAAO,mBAAmB,cAA6B,CAAC;AAAA,IAC3N,CAAC;AAAA,IACL,cAAc,IAAI,SAAUA,KAAI,WAAW;AACvC,UAAI,gBAAgBA,IAAG,eAAe,gBAAgBA,IAAG,eAAe,oBAAoBA,IAAG;AAC/F,UAAI,wBAAwB,KAAK,KAAK,OAAO,IAAI,MAAM;AACvD,aAAO,MAAM,KAAK,EAAE,QAAQ,cAAc,CAAC,EACtC,IAAI,SAAU,GAAG,eAAe;AACjC,YAAIA;AACJ,YAAI,cAAc;AAClB,eAAc,oBAAc,UAAU,EAAE,KAAK,YAAY,OAAO,WAAW,GAAG,kBAAkB,sBAAsB,eAA8B,WAAW,mBAAmB,MAAM,cAAc,iBAAiB,uBAAuB,iBAAiB,oBAAqB,gBAAiB,QAAQA,MAAK,sBAAsB,YAAY,mBAAmB,gBAAgB,eAAe,qBAAqB,MAAM,OAAO,QAAQA,QAAO,SAASA,MAAK,OAAO,CAAC;AAAA,MACjd,CAAC;AAAA,IACL,CAAC;AAAA,EAAC;AACV;AAEA,IAAI,QAAQ,aAAAC,QAAe,KAAK,aAAa;",
  "names": ["__assign", "index", "_a", "React__default"]
}
